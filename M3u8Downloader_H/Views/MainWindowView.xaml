<Window x:Class="M3u8Downloader_H.Views.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:s="https://github.com/canton7/Stylet"
        xmlns:local="clr-namespace:M3u8Downloader_H.ViewModels"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:behavior="clr-namespace:M3u8Downloader_H.Behaviors"
        xmlns:converters="clr-namespace:M3u8Downloader_H.Converters"
        mc:Ignorable="d"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:model="clr-namespace:M3u8Downloader_H.Models"
        d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel}"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        AllowsTransparency="True"
        Height="450" Width="600">
    <i:Interaction.Behaviors>
        <behavior:WindowSystemCommandBehavior />
        <behavior:DragMoveWindowBehavior />
    </i:Interaction.Behaviors>

    <Grid>
        <Grid.RowDefinitions >
            <RowDefinition Height="26.4" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal">
                <Image Source="pack://application:,,,/icon.ico" 
                                            Height="{x:Static SystemParameters.SmallIconHeight}"
                                            Width="{x:Static SystemParameters.SmallIconWidth}"
                                            Margin="7,0,5,0" VerticalAlignment="Center"/>
                <ContentControl IsTabStop="False"
                                Foreground="Black"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="{DynamicResource {x:Static SystemFonts.CaptionFontSize}}"
                                Content="{Binding DisplayName}" />
            </StackPanel>
            <StackPanel Grid.Column="1"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Stretch"
                        Background="Transparent"
                        Orientation="Horizontal"
                        WindowChrome.IsHitTestVisibleInChrome="True"
                        Margin="0,-1,-1,0">
                <materialDesign:PopupBox >
                    <StackPanel >
                        <Button Content=" 设  置 "  
                                FontSize="15" 
                                Command="{s:Action ShowSettings}" />
                        <Button Content=" 关  于 " 
                                FontSize="15" 
                                Command="{s:Action ShowAbout}" 
                                IsEnabled="{Binding CanShowSettings}" />
                        <Button Content=" 赞  助 " 
                                FontSize="15" 
                                Command="{s:Action ShowSponsor}" 
                                IsEnabled="{Binding CanShowSettings}" />
                    </StackPanel>
                </materialDesign:PopupBox>
                <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                    Foreground="Black"
                                    Command="{Binding Source={x:Static SystemCommands.MinimizeWindowCommand}}"
                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                    ContentTemplate="{StaticResource MinimizeWhite}"
                                    IsTabStop="False" />
                <Button Background="Red"
                        Command="{Binding Source={x:Static SystemCommands.CloseWindowCommand}}"
                        ContentTemplate="{StaticResource CloseWhite}"
                        Style="{StaticResource TitleBarButtonStyle}"
                        IsTabStop="False" />
            </StackPanel>
        </Grid>

        <materialDesign:DialogHost
            Grid.Row="1"
            CloseOnClickAway="False"
            SnackbarMessageQueue="{Binding Notifications}"
            Style="{DynamicResource MaterialDesignEmbeddedDialogHost}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" Height="95" Name="videoDownloadInfoGrid"  >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="4*" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <StackPanel x:Name="VideoInfoSingleStackpanel"  DataContext="{Binding VideoDownloadInfo}">
                        <TextBox Text="{Binding RequestUrl,Delay=150}" Margin="8" 
                                 materialDesign:TextFieldAssist.HasClearButton="True"
                                 materialDesign:HintAssist.Hint="下载地址,m3u8,txt,json,xml文件(文件可以直接拖拽到此处)"  FontSize="18"  VerticalAlignment="Center" >
                            <i:Interaction.Behaviors>
                                <behavior:DragAndDropBehaviour />
                            </i:Interaction.Behaviors>
                        </TextBox>
                        <TextBox Text="{Binding VideoName,Delay=150}" Margin="8" 
                                 materialDesign:TextFieldAssist.HasClearButton="True"
                                 materialDesign:HintAssist.Hint="视频名称(高级下载模式，双击此处)" FontSize="18"  VerticalAlignment="Center">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDoubleClick">
                                    <behavior:HeightAnimationTriggerAction TargetControl="{Binding ElementName=videoDownloadInfoGrid}" From="95" To="191" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <DockPanel  Margin="8" >
                            <ComboBox SelectedValue="{Binding Method,TargetNullValue=AES-128}" FontSize="18" 
                                      ItemsSource="{Binding DataContext.Methods,RelativeSource={RelativeSource AncestorType=Window}}" />
                            <TextBox Text="{Binding Key}"  Margin="5 0 0 0" FontSize="18"
                                     materialDesign:HintAssist.Hint="KEY(字符串或者base64)" />
                        </DockPanel>
                        <TextBox Text="{Binding Iv}"  Margin="8"  FontSize="18" 
                                  materialDesign:HintAssist.Hint="IV(例如0x11223344556677888877665544332211)"/>
                    </StackPanel>
                    <Grid Grid.Column="1" >
                        <Button Margin="5" materialDesign:ShadowAssist.ShadowDepth="Depth2"
                            Command="{s:Action ProcessDownload}"
                            CommandParameter="{Binding ElementName=VideoInfoSingleStackpanel,Path=DataContext}">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="Download" Margin="0 2 0 0" />
                                <TextBlock Text="下载" />
                            </StackPanel>
                        </Button>
                    </Grid>
                </Grid>

                <Grid Grid.Row="1">
                    <ListView  ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding Downloads}" Background="{DynamicResource MaterialDesignCardBackground}" >
                        <ListView.Resources>
                            <ContextMenu x:Key="ItemContextMenu">
                                <MenuItem Header="复制地址" Command="{s:Action CopyUrl}"  CommandParameter="{Binding}" />
                                <MenuItem Header="复制名称" Command="{s:Action CopyTitle}"  CommandParameter="{Binding}" />
                                <MenuItem Header="复制错误信息" Command="{s:Action CopyFailReason}"  CommandParameter="{Binding}" />
                                <Separator />
                                <MenuItem Header="删除" Command="{s:Action RemoveDownload}"  CommandParameter="{Binding}" />
                                <MenuItem Header="删除同时删除缓存" Command="{s:Action RemoveDownloadAndCache}"  CommandParameter="{Binding}" />
                                <MenuItem Header="删除所有失败的下载" Command="{s:Action RemoveFailedDownloads}" />
                                <MenuItem Header="删除所有闲置下载" Command="{s:Action RemoveInactiveDownloads}" />
                                <MenuItem Header="删除所有已完成记录" Command="{s:Action RemoveSuccessDownloads}" />
                                <Separator />
                                <MenuItem Header="重新开始所有失败的下载"  Command="{s:Action RestartFailedDownloads}"/>
                            </ContextMenu>
                        </ListView.Resources>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn  Width="220" DisplayMemberBinding="{Binding RequestUrl,TargetNullValue=似乎没有请求地址哦}"  Header="请求地址" />
                                <GridViewColumn  Width="150" DisplayMemberBinding="{Binding VideoName}"  Header="视频名称" />
                                <GridViewColumn  Header="状态" Width="100">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto" />
                                                    <ColumnDefinition Width="auto"  />
                                                </Grid.ColumnDefinitions>
                                                <ProgressBar
                                                    Grid.Column="0"
                                                    Margin="0,0,6,0"
                                                    Maximum="1"
                                                    Minimum="0"
                                                    IsIndeterminate="{Binding IsProgressIndeterminate}"
                                                    Value="{Binding ProgressNum, Mode=OneWay}">
                                                    <ProgressBar.Style>
                                                        <Style BasedOn="{StaticResource MaterialDesignCircularProgressBar}" TargetType="{x:Type ProgressBar}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Status}" Value="{x:Static model:DownloadStatus.Enqueued}">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Status}" Value="{x:Static model:DownloadStatus.Canceled}">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Status}" Value="{x:Static model:DownloadStatus.Completed}">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Status}" Value="{x:Static model:DownloadStatus.Failed}">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ProgressBar.Style>
                                                </ProgressBar>

                                                <TextBlock Grid.Column="1"
                                                       VerticalAlignment="Center"
                                                       TextTrimming="CharacterEllipsis">
                                                    <TextBlock.Style>
                                                        <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
                                                            <Style.Triggers>

                                                                <DataTrigger Binding="{Binding Status}" Value="{x:Static model:DownloadStatus.Parsed}" >
                                                                    <Setter Property="Text" Value="开始解析..." />
                                                                </DataTrigger>

                                                                <DataTrigger Binding="{Binding Status}" Value="{x:Static model:DownloadStatus.StartedVod}" >
                                                                    <Setter Property="Text" Value="{Binding ProgressNum,StringFormat=\{0:P1\}}" />
                                                                </DataTrigger>

                                                                <DataTrigger Binding="{Binding Status}" Value="{x:Static model:DownloadStatus.StartedLive}" >
                                                                    <Setter Property="Text" Value="{Binding RecordDuration,Converter={x:Static converters:DoubleToTimespanConverters.Instance}}" />
                                                                </DataTrigger>

                                                                <DataTrigger Binding="{Binding Status}" Value="{x:Static model:DownloadStatus.Enqueued}" >
                                                                    <Setter Property="Text" Value="等待下载..." />
                                                                </DataTrigger>

                                                                <DataTrigger Binding="{Binding Status}" Value="{x:Static model:DownloadStatus.Completed}" >
                                                                    <Setter Property="Foreground" Value="{DynamicResource SuccessBrush}" />
                                                                    <Setter Property="Text" Value="✔ 完成" />
                                                                </DataTrigger>

                                                                <DataTrigger Binding="{Binding Status}" Value="{x:Static model:DownloadStatus.Canceled}" >
                                                                    <Setter Property="Foreground" Value="{DynamicResource CanceledBrush}" />
                                                                    <Setter Property="Text" Value="⏹ 停止" />
                                                                </DataTrigger>

                                                                <DataTrigger Binding="{Binding Status}" Value="{x:Static model:DownloadStatus.Failed}" >
                                                                    <Setter Property="Foreground" Value="{DynamicResource FailedBrush}" />
                                                                    <Setter Property="Text" Value="⚠ 错误" />
                                                                    <Setter Property="ToolTip" Value="{Binding FailReason}" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn  >
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel s:View.ActionTarget="{Binding}"
                                            Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">

                                                <Button Padding="4,0,0,0" VerticalAlignment="Center"  ToolTip="停止下载" 
                                                    Style="{DynamicResource MaterialDesignFlatButton}"
                                                    Command="{s:Action OnCancel}"
                                                    Visibility="{Binding CanOnCancel,Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                                                    <materialDesign:PackIcon Width="24" Height="24" Kind="StopCircleOutline" />
                                                </Button>

                                                <Button Padding="4,0,0,0"  VerticalAlignment="Center"  ToolTip="重新下载" 
                                                    Style="{DynamicResource MaterialDesignFlatButton}"
                                                    Command="{s:Action OnRestart}"
                                                    Visibility="{Binding CanOnRestart,Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                                                    <materialDesign:PackIcon Width="24" Height="24" Kind="Restart" />
                                                </Button>

                                                <Button Padding="4,0,0,0" VerticalAlignment="Center"  ToolTip="显示文件所在目录" 
                                                    Style="{DynamicResource MaterialDesignFlatButton}"
                                                    Command="{s:Action OnShowFile}"
                                                    Visibility="{Binding CanOnShowFile,Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                                                    <materialDesign:PackIcon Width="24" Height="24" Kind="FileFindOutline" />
                                                </Button>
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <materialDesign:Snackbar MessageQueue="{Binding Notifications}" />
                </Grid>
            </Grid>
        </materialDesign:DialogHost>
    </Grid>
</Window>
